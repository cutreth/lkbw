# Generated by Django 2.0.8 on 2018-12-08 18:05

import blog.blocks
from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0040_page_draft_title'),
        ('wagtailimages', '0021_image_file_hash'),
        ('blog', '0048_auto_20181208_1131'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogGalleryPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('post_date', models.DateField(verbose_name='Post date')),
                ('intro', models.CharField(max_length=250)),
                ('body', wagtail.core.fields.StreamField([('header', wagtail.core.blocks.StructBlock([('header', wagtail.core.blocks.CharBlock())])), ('date', wagtail.core.blocks.StructBlock([('date', wagtail.core.blocks.DateBlock())])), ('text', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.RichTextBlock())])), ('aside', wagtail.core.blocks.StructBlock([('aside', wagtail.core.blocks.BlockQuoteBlock())])), ('caption', wagtail.core.blocks.StructBlock([('caption', wagtail.core.blocks.CharBlock())])), ('gallery', wagtail.core.blocks.StructBlock([('pictures', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(Required=False))])))])), ('picture', wagtail.core.blocks.StructBlock([('picture', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(Required=False))]))])), ('location', wagtail.core.blocks.StructBlock([('address', wagtail.core.blocks.CharBlock(required=False)), ('place', wagtail.core.blocks.CharBlock(required=False)), ('location', blog.blocks.PlaceBlock(address_field='address', place_field='place')), ('zoom', wagtail.core.blocks.IntegerBlock(default=8, max_value=19, min_value=0, required=False)), ('satellite', wagtail.core.blocks.BooleanBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(required=False))])), ('place', wagtail.core.blocks.StructBlock([('address', wagtail.core.blocks.CharBlock(required=False)), ('place', wagtail.core.blocks.CharBlock(required=False)), ('location', blog.blocks.PlaceBlock(address_field='address', place_field='place')), ('zoom', wagtail.core.blocks.IntegerBlock(default=8, max_value=19, min_value=0, required=False)), ('satellite', wagtail.core.blocks.BooleanBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(required=False))]))], blank=True, null=True)),
                ('banner_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogProjectPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('post_date', models.DateField(verbose_name='Post date')),
                ('body', wagtail.core.fields.StreamField([('header', wagtail.core.blocks.StructBlock([('header', wagtail.core.blocks.CharBlock())])), ('date', wagtail.core.blocks.StructBlock([('date', wagtail.core.blocks.DateBlock())])), ('text', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.RichTextBlock())])), ('aside', wagtail.core.blocks.StructBlock([('aside', wagtail.core.blocks.BlockQuoteBlock())])), ('caption', wagtail.core.blocks.StructBlock([('caption', wagtail.core.blocks.CharBlock())])), ('gallery', wagtail.core.blocks.StructBlock([('pictures', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(Required=False))])))])), ('picture', wagtail.core.blocks.StructBlock([('picture', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(Required=False))]))])), ('location', wagtail.core.blocks.StructBlock([('address', wagtail.core.blocks.CharBlock(required=False)), ('place', wagtail.core.blocks.CharBlock(required=False)), ('location', blog.blocks.PlaceBlock(address_field='address', place_field='place')), ('zoom', wagtail.core.blocks.IntegerBlock(default=8, max_value=19, min_value=0, required=False)), ('satellite', wagtail.core.blocks.BooleanBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(required=False))])), ('place', wagtail.core.blocks.StructBlock([('address', wagtail.core.blocks.CharBlock(required=False)), ('place', wagtail.core.blocks.CharBlock(required=False)), ('location', blog.blocks.PlaceBlock(address_field='address', place_field='place')), ('zoom', wagtail.core.blocks.IntegerBlock(default=8, max_value=19, min_value=0, required=False)), ('satellite', wagtail.core.blocks.BooleanBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(required=False))]))], blank=True, null=True)),
                ('banner_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogTrackerPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('header', wagtail.core.blocks.StructBlock([('header', wagtail.core.blocks.CharBlock())])), ('date', wagtail.core.blocks.StructBlock([('date', wagtail.core.blocks.DateBlock())])), ('text', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.RichTextBlock())])), ('aside', wagtail.core.blocks.StructBlock([('aside', wagtail.core.blocks.BlockQuoteBlock())])), ('caption', wagtail.core.blocks.StructBlock([('caption', wagtail.core.blocks.CharBlock())])), ('gallery', wagtail.core.blocks.StructBlock([('pictures', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(Required=False))])))])), ('picture', wagtail.core.blocks.StructBlock([('picture', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.CharBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(Required=False))]))])), ('location', wagtail.core.blocks.StructBlock([('address', wagtail.core.blocks.CharBlock(required=False)), ('place', wagtail.core.blocks.CharBlock(required=False)), ('location', blog.blocks.PlaceBlock(address_field='address', place_field='place')), ('zoom', wagtail.core.blocks.IntegerBlock(default=8, max_value=19, min_value=0, required=False)), ('satellite', wagtail.core.blocks.BooleanBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(required=False))])), ('place', wagtail.core.blocks.StructBlock([('address', wagtail.core.blocks.CharBlock(required=False)), ('place', wagtail.core.blocks.CharBlock(required=False)), ('location', blog.blocks.PlaceBlock(address_field='address', place_field='place')), ('zoom', wagtail.core.blocks.IntegerBlock(default=8, max_value=19, min_value=0, required=False)), ('satellite', wagtail.core.blocks.BooleanBlock(required=False)), ('date', wagtail.core.blocks.DateBlock(required=False))]))], blank=True, null=True)),
                ('banner_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
